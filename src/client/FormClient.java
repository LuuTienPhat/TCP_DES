package client;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import des.DES;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;

import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import java.net.Socket;

import java.io.DataInputStream;

import java.io.DataOutputStream;
import java.io.FileWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;

/**
 *
 * @author Phat
 */
public class FormClient extends javax.swing.JFrame {

    int resultRow = 0;
    String fileTextPath = "", fileSecketKeyPath = "";

    /**
     * Creates new form Client
     *
     */
    public FormClient() {
        initComponents();
        this.setLocationRelativeTo(null);
        lbStatus.setText("Connected to " + Client.client.getInetAddress().getHostAddress() + ":" + Client.client.getPort());
        keyInputWarning.setText("");
        textInputWarning.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        doEncryption = new javax.swing.JButton();
        doDecryption = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        chosenFileName = new javax.swing.JTextField();
        chooseFile = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        chosenKeyFileName = new javax.swing.JTextField();
        chooseKeyFile = new javax.swing.JButton();
        saveFile = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtKey = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtText = new javax.swing.JTextArea();
        keyInputWarning = new javax.swing.JLabel();
        textInputWarning = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnClearConsole = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnSend = new javax.swing.JButton();
        btnResetField = new javax.swing.JButton();
        lbStatus = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnDisconnect = new javax.swing.JButton();

        doEncryption.setBackground(new java.awt.Color(238, 238, 238));
        doEncryption.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        doEncryption.setForeground(new java.awt.Color(44, 6, 31));
        doEncryption.setText("Mã hóa");
        doEncryption.setBorder(null);
        doEncryption.setBorderPainted(false);
        doEncryption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doEncryptionActionPerformed(evt);
            }
        });

        doDecryption.setBackground(new java.awt.Color(238, 238, 238));
        doDecryption.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        doDecryption.setForeground(new java.awt.Color(44, 6, 31));
        doDecryption.setText("Giải mã");
        doDecryption.setBorder(null);
        doDecryption.setBorderPainted(false);
        doDecryption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doDecryptionActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(57, 62, 70));
        jPanel2.setForeground(new java.awt.Color(57, 62, 70));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(238, 238, 238));
        jLabel1.setText("Chọn đường dẫn file mã hóa");

        chosenFileName.setBackground(new java.awt.Color(34, 40, 49));
        chosenFileName.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        chosenFileName.setForeground(new java.awt.Color(238, 238, 238));
        chosenFileName.setBorder(null);
        chosenFileName.setCaretColor(new java.awt.Color(238, 238, 238));
        chosenFileName.setFocusable(false);

        chooseFile.setBackground(new java.awt.Color(255, 211, 105));
        chooseFile.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        chooseFile.setText("...");
        chooseFile.setBorderPainted(false);
        chooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(238, 238, 238));
        jLabel2.setText("Chọn đường dẫn đến file Khóa");

        chosenKeyFileName.setBackground(new java.awt.Color(34, 40, 49));
        chosenKeyFileName.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        chosenKeyFileName.setForeground(new java.awt.Color(238, 238, 238));
        chosenKeyFileName.setBorder(null);
        chosenKeyFileName.setCaretColor(new java.awt.Color(238, 238, 238));
        chosenKeyFileName.setFocusable(false);

        chooseKeyFile.setBackground(new java.awt.Color(255, 211, 105));
        chooseKeyFile.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        chooseKeyFile.setText("...");
        chooseKeyFile.setBorderPainted(false);
        chooseKeyFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseKeyFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(chosenKeyFileName, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                                .addComponent(chosenFileName, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chooseFile)
                            .addComponent(chooseKeyFile))))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chosenFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chosenKeyFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseKeyFile, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        saveFile.setBackground(new java.awt.Color(238, 238, 238));
        saveFile.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        saveFile.setForeground(new java.awt.Color(44, 6, 31));
        saveFile.setText("Lưu File");
        saveFile.setBorder(null);
        saveFile.setBorderPainted(false);
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client");
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(34, 40, 49));

        jPanel1.setBackground(new java.awt.Color(57, 62, 70));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(238, 238, 238));
        jLabel4.setText("Enter Plain Text:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(238, 238, 238));
        jLabel5.setText("Enter Key (require 16 characters):");

        txtKey.setBackground(new java.awt.Color(34, 40, 49));
        txtKey.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtKey.setForeground(new java.awt.Color(238, 238, 238));
        txtKey.setText("1234567887654321");
        txtKey.setBorder(null);
        txtKey.setCaretColor(new java.awt.Color(255, 255, 255));
        txtKey.setSelectedTextColor(new java.awt.Color(34, 40, 49));
        txtKey.setSelectionColor(new java.awt.Color(255, 211, 105));

        jScrollPane1.setBorder(null);

        txtText.setBackground(new java.awt.Color(34, 40, 49));
        txtText.setColumns(20);
        txtText.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtText.setForeground(new java.awt.Color(238, 238, 238));
        txtText.setRows(3);
        txtText.setText("Xin chao cac ban chuc mot ngay tot lanh");
        txtText.setBorder(null);
        txtText.setSelectedTextColor(new java.awt.Color(34, 40, 49));
        txtText.setSelectionColor(new java.awt.Color(255, 211, 105));
        jScrollPane1.setViewportView(txtText);

        keyInputWarning.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        keyInputWarning.setForeground(new java.awt.Color(255, 211, 105));
        keyInputWarning.setText("Alert for key input!");

        textInputWarning.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        textInputWarning.setForeground(new java.awt.Color(255, 211, 105));
        textInputWarning.setText("Alert for text input!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(txtKey, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textInputWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(keyInputWarning, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textInputWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keyInputWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(238, 238, 238));
        jLabel3.setText("Log");

        jScrollPane3.setBorder(null);

        txtLog.setEditable(false);
        txtLog.setBackground(new java.awt.Color(34, 40, 49));
        txtLog.setColumns(20);
        txtLog.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtLog.setForeground(new java.awt.Color(255, 211, 105));
        txtLog.setRows(5);
        txtLog.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(57, 62, 70), 3));
        txtLog.setCaretColor(new java.awt.Color(255, 211, 105));
        txtLog.setSelectedTextColor(new java.awt.Color(34, 40, 49));
        txtLog.setSelectionColor(new java.awt.Color(255, 211, 105));
        jScrollPane3.setViewportView(txtLog);

        btnClearConsole.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnClearConsole.setForeground(new java.awt.Color(34, 40, 49));
        btnClearConsole.setText("Clear console");
        btnClearConsole.setBorderPainted(false);
        btnClearConsole.setFocusPainted(false);
        btnClearConsole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearConsoleActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnExit.setForeground(new java.awt.Color(34, 40, 49));
        btnExit.setText("Exit");
        btnExit.setBorderPainted(false);
        btnExit.setFocusPainted(false);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnSend.setBackground(new java.awt.Color(255, 211, 105));
        btnSend.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnSend.setForeground(new java.awt.Color(34, 40, 49));
        btnSend.setText("Send");
        btnSend.setBorderPainted(false);
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnResetField.setBackground(new java.awt.Color(238, 238, 238));
        btnResetField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnResetField.setForeground(new java.awt.Color(34, 40, 49));
        btnResetField.setText("Reset");
        btnResetField.setBorder(null);
        btnResetField.setBorderPainted(false);
        btnResetField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetFieldActionPerformed(evt);
            }
        });

        lbStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbStatus.setForeground(new java.awt.Color(255, 211, 105));
        lbStatus.setText("Connected to");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(238, 238, 238));
        jLabel7.setText("Status");

        btnDisconnect.setBackground(new java.awt.Color(240, 84, 84));
        btnDisconnect.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDisconnect.setForeground(new java.awt.Color(238, 238, 238));
        btnDisconnect.setText("Disconnect");
        btnDisconnect.setBorder(null);
        btnDisconnect.setBorderPainted(false);
        btnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisconnectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnClearConsole, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnResetField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnResetField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnClearConsole, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 565, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doDecryptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doDecryptionActionPerformed
        if (!checkDir()) {
            JOptionPane.showMessageDialog(null, "Xin hãy kiểm tra dữ liệu đầu vào");
        } else {
            try {
                // TODO add your handling code here:

                Client.client = new Socket(Client.address, Client.port);
                Client.dataInputStream = new DataInputStream(Client.client.getInputStream());
                Client.dataOutputStream = new DataOutputStream(Client.client.getOutputStream());

                String encryptedText = readFile(fileTextPath);
                String SECRET_KEY = readFile(fileSecketKeyPath);

                Client.dataOutputStream.writeInt(1);
                Client.dataOutputStream.writeUTF(encryptedText);
                Client.dataOutputStream.writeUTF(SECRET_KEY);

                txtText.setText(Client.dataInputStream.readUTF());

            } catch (IOException ex) {
                System.err.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_doDecryptionActionPerformed

    private void chooseKeyFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseKeyFileActionPerformed
        // TODO add your handling code here:
        fileSecketKeyPath = showOpenDialog(chosenKeyFileName);
    }//GEN-LAST:event_chooseKeyFileActionPerformed

    private void doEncryptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doEncryptionActionPerformed
        // TODO add your handling code here:
        if (!checkInput()) {
            return;
        }
        try {
            // TODO add your handling code here:
            Client.client = new Socket(Client.address, Client.port);
            Client.dataInputStream = new DataInputStream(Client.client.getInputStream());
            Client.dataOutputStream = new DataOutputStream(Client.client.getOutputStream());

            String text = readFile(fileTextPath);
            String key = readFile(fileSecketKeyPath);
            System.out.println(text);

            Client.dataOutputStream.writeInt(2);
            Client.dataOutputStream.writeUTF(text);
            Client.dataOutputStream.writeUTF(key);

            showResult(Client.dataInputStream.readUTF());

        } catch (IOException ex) {
            System.err.println(ex.getMessage());
        }

    }//GEN-LAST:event_doEncryptionActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
        // TODO add your handling code here:
        String filePath = showSaveDialog("Lưu Bản mã");
        String filePath2 = showSaveDialog("Lưu Khóa");

        if (!checkInput()) {
            return;
        }
    }//GEN-LAST:event_saveFileActionPerformed

    private String encrypt(String text, String SECRET_KEY) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, IllegalBlockSizeException, BadPaddingException {
        Cipher cipher = Cipher.getInstance("DES/ECB/PKCS5PADDING");
        SecretKeySpec skeySpec = new SecretKeySpec(SECRET_KEY.getBytes(), "DES");
        cipher.init(Cipher.ENCRYPT_MODE, skeySpec);
        byte[] cipherText = cipher.doFinal(text.getBytes());

        String encrypted = Base64.getEncoder().encodeToString(cipherText);
        return encrypted;
    }

    private boolean checkInput() {
        int count = 0;

        if (txtText.getText().isEmpty()) {
            textInputWarning.setText("Please type the text!");
            count++;
        }
        if (txtKey.getText().trim().isEmpty()) {
            keyInputWarning.setText("Please type the key!");
            count++;
        } else if (txtKey.getText().trim().length() !=16) {
            keyInputWarning.setText("The key must contain 16 characters");
            count++;
        }

        if (count == 0) {
            textInputWarning.setText("");
            keyInputWarning.setText("");
            return true;
        }
        return false;

    }

    private void showMessage(String message) {
        JOptionPane.showMessageDialog(null, message);
    }

    private void showResult(String text) {
        if (resultRow != 0) {
            txtLog.append("\n");
        }
        txtLog.append(" " + text);
        resultRow++;
    }

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        if (!checkInput()) {
            return;
        } else {
            try {
                // TODO add your handling code here:
                Client.client = new Socket(Client.address, Client.port);
                Client.dataInputStream = new DataInputStream(Client.client.getInputStream());
                Client.dataOutputStream = new DataOutputStream(Client.client.getOutputStream());

                String text = txtText.getText();
                String key = txtKey.getText();

                String cipherText = DES.encrypt(text, key);
                Client.dataOutputStream.writeUTF(cipherText);
                Client.dataOutputStream.writeUTF(key);
                
                String result = Client.dataInputStream.readUTF();
//                System.out.println("Ban ma: " + result);
//                result = DES.decrypt(result, key);
                
                showResult(result.trim());
                
                Client.dataInputStream.close();
                Client.dataOutputStream.close();
                Client.client.close();
            } catch (IOException ex) {
                showMessage(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnClearConsoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearConsoleActionPerformed
        // TODO add your handling code here:
        txtLog.setText("");
        resultRow = 0;
    }//GEN-LAST:event_btnClearConsoleActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void chooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseFileActionPerformed
        // TODO add your handling code here:
        fileTextPath = showOpenDialog(chosenFileName);
    }//GEN-LAST:event_chooseFileActionPerformed

    private void btnResetFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetFieldActionPerformed
        // TODO add your handling code here:
        txtText.setText("");
        txtKey.setText("");
        chosenFileName.setText("");
        chosenKeyFileName.setText("");
    }//GEN-LAST:event_btnResetFieldActionPerformed

    private void btnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisconnectActionPerformed
        try {
            // TODO add your handling code here:
            Client.client.close();
            Client.openFormClientConnection();
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(FormClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDisconnectActionPerformed

    //NOT USED BUT DO NOT DELETE
    private Boolean checkDir() {
        if (chosenFileName.getText().isEmpty()) {
            showMessage("Chọn file lưu bản mã");
            return false;
        }
        if (chosenKeyFileName.getText().isEmpty()) {
            showMessage("Chọn file lưu khóa");
            return false;
        }
        return true;
    }

    private String showOpenDialog(JTextField textField) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new java.io.File("."));
        fileChooser.setDialogTitle("Chọn file");
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {

//            /fileTextPath = fileChooser.getSelectedFile().getAbsolutePath();
            textField.setText(fileChooser.getSelectedFile().getName());
            return fileChooser.getSelectedFile().getAbsolutePath();
        }
        return "";
    }

    private String showSaveDialog(String title) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new java.io.File("."));
        fileChooser.setDialogTitle(title);
        int returnValue = fileChooser.showSaveDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            String file = fileChooser.getSelectedFile().getAbsolutePath();
        }
        return "";
    }

    private String readFile(String filePath) throws FileNotFoundException {
        String text = "";
        Scanner sc = null;

        try {
            sc = new Scanner(new File(filePath));
        } catch (FileNotFoundException ex) {
            System.err.println(ex.getMessage());
        }

        while (sc.hasNext()) {
            text += sc.nextLine();
        }
        return text;
    }

    private void writeFile(String filePath, String data) {
        try {
            FileWriter fileWriter = new FileWriter(new File(filePath));
            fileWriter.write(data);
            fileWriter.close();
        } catch (IOException ex) {
            System.out.println("Error when write file: " + ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormClientConnection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                new FormClient().setVisible(true);
//            }
//        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearConsole;
    private javax.swing.JButton btnDisconnect;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnResetField;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton chooseFile;
    private javax.swing.JButton chooseKeyFile;
    private javax.swing.JTextField chosenFileName;
    private javax.swing.JTextField chosenKeyFileName;
    private javax.swing.JButton doDecryption;
    private javax.swing.JButton doEncryption;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel keyInputWarning;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JButton saveFile;
    private javax.swing.JLabel textInputWarning;
    private javax.swing.JTextField txtKey;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextArea txtText;
    // End of variables declaration//GEN-END:variables
}
